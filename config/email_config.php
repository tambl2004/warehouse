<?php
/**
 * C·∫•u h√¨nh Email cho H·ªá th·ªëng Qu·∫£n l√Ω Ng∆∞·ªùi d√πng
 * File: config/email_config.php
 */

// Import PHPMailer classes
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

class EmailConfig {
    // C·∫•u h√¨nh SMTP
    private static $smtp_config = [
        'host' => 'smtp.gmail.com',
        'port' => 587,
        'username' => 'your-email@gmail.com', // Thay ƒë·ªïi email c·ªßa b·∫°n
        'password' => 'your-app-password',     // Thay ƒë·ªïi app password
        'from_email' => 'your-email@gmail.com',
        'from_name' => 'H·ªá th·ªëng Kho H√†ng',
        'encryption' => PHPMailer::ENCRYPTION_STARTTLS
    ];

    /**
     * G·ª≠i email OTP cho ƒëƒÉng k√Ω t√†i kho·∫£n
     */
    public static function guiEmailOTP($email, $hoTen, $otp) {
        $subject = 'M√£ OTP x√°c th·ª±c t√†i kho·∫£n - H·ªá th·ªëng Kho H√†ng';
        
        $body = self::taoTemplateOTP($hoTen, $otp);
        
        return self::guiEmail($email, $hoTen, $subject, $body);
    }

    /**
     * G·ª≠i email reset m·∫≠t kh·∫©u
     */
    public static function guiEmailResetPassword($email, $hoTen, $resetToken) {
        $subject = 'Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u - H·ªá th·ªëng Kho H√†ng';
        
        $resetLink = self::taoLinkResetPassword($resetToken);
        $body = self::taoTemplateResetPassword($hoTen, $resetLink);
        
        return self::guiEmail($email, $hoTen, $subject, $body);
    }

    /**
     * G·ª≠i email th√¥ng b√°o t√†i kho·∫£n b·ªã kh√≥a
     */
    public static function guiEmailThongBaoKhoa($email, $hoTen, $lyDo = null) {
        $subject = 'Th√¥ng b√°o t√†i kho·∫£n b·ªã t·∫°m kh√≥a - H·ªá th·ªëng Kho H√†ng';
        
        $body = self::taoTemplateThongBaoKhoa($hoTen, $lyDo);
        
        return self::guiEmail($email, $hoTen, $subject, $body);
    }

    /**
     * H√†m g·ª≠i email ch√≠nh
     */
    private static function guiEmail($email, $name, $subject, $body) {
        try {
            // T·∫°o instance PHPMailer
            $mail = new PHPMailer(true);

            // C·∫•u h√¨nh server
            $mail->isSMTP();
            $mail->Host = self::$smtp_config['host'];
            $mail->SMTPAuth = true;
            $mail->Username = self::$smtp_config['username'];
            $mail->Password = self::$smtp_config['password'];
            $mail->SMTPSecure = self::$smtp_config['encryption'];
            $mail->Port = self::$smtp_config['port'];
            $mail->CharSet = 'UTF-8';

            // Ng∆∞·ªùi g·ª≠i
            $mail->setFrom(self::$smtp_config['from_email'], self::$smtp_config['from_name']);
            
            // Ng∆∞·ªùi nh·∫≠n
            $mail->addAddress($email, $name);

            // N·ªôi dung email
            $mail->isHTML(true);
            $mail->Subject = $subject;
            $mail->Body = $body;

            // G·ª≠i email
            $mail->send();
            return true;

        } catch (Exception $e) {
            error_log("L·ªói g·ª≠i email: " . $mail->ErrorInfo);
            return false;
        }
    }

    /**
     * T·∫°o template HTML cho email OTP
     */
    private static function taoTemplateOTP($hoTen, $otp) {
        return "
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='UTF-8'>
            <style>
                body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }
                .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
                .header { background: linear-gradient(45deg, #667eea, #764ba2); color: white; padding: 30px; text-align: center; }
                .content { padding: 30px; }
                .otp-box { background: #f8f9fa; border: 2px dashed #667eea; border-radius: 10px; padding: 20px; text-align: center; margin: 20px 0; }
                .otp-code { font-size: 32px; font-weight: bold; color: #667eea; letter-spacing: 5px; }
                .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #6c757d; font-size: 12px; }
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üè™ H·ªá th·ªëng Kho H√†ng</h1>
                    <p>X√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n</p>
                </div>
                <div class='content'>
                    <h2>Xin ch√†o {$hoTen}!</h2>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i H·ªá th·ªëng Kho H√†ng. ƒê·ªÉ ho√†n t·∫•t vi·ªác ƒëƒÉng k√Ω, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP d∆∞·ªõi ƒë√¢y:</p>
                    
                    <div class='otp-box'>
                        <p>M√£ OTP c·ªßa b·∫°n l√†:</p>
                        <div class='otp-code'>{$otp}</div>
                        <p><small>M√£ n√†y c√≥ hi·ªáu l·ª±c trong 15 ph√∫t</small></p>
                    </div>
                    
                    <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                    <ul>
                        <li>Kh√¥ng chia s·∫ª m√£ OTP n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                        <li>M√£ OTP ch·ªâ c√≥ hi·ªáu l·ª±c trong 15 ph√∫t</li>
                        <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω, vui l√≤ng b·ªè qua email n√†y</li>
                    </ul>
                </div>
                <div class='footer'>
                    <p>¬© 2024 H·ªá th·ªëng Kho H√†ng. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    /**
     * T·∫°o template HTML cho email reset password
     */
    private static function taoTemplateResetPassword($hoTen, $resetLink) {
        return "
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='UTF-8'>
            <style>
                body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }
                .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
                .header { background: linear-gradient(45deg, #ff6b6b, #ee5a52); color: white; padding: 30px; text-align: center; }
                .content { padding: 30px; }
                .button { display: inline-block; background: linear-gradient(45deg, #667eea, #764ba2); color: white; padding: 15px 30px; text-decoration: none; border-radius: 25px; font-weight: bold; margin: 20px 0; }
                .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #6c757d; font-size: 12px; }
                .warning { background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 15px; margin: 20px 0; color: #856404; }
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
                    <p>H·ªá th·ªëng Kho H√†ng</p>
                </div>
                <div class='content'>
                    <h2>Xin ch√†o {$hoTen}!</h2>
                    <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. N·∫øu ƒë√¢y l√† y√™u c·∫ßu c·ªßa b·∫°n, vui l√≤ng nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi:</p>
                    
                    <div style='text-align: center;'>
                        <a href='{$resetLink}' class='button'>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
                    </div>
                    
                    <div class='warning'>
                        <strong>‚ö†Ô∏è L∆∞u √Ω b·∫£o m·∫≠t:</strong>
                        <ul>
                            <li>Link n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong 1 gi·ªù</li>
                            <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
                            <li>Kh√¥ng chia s·∫ª link n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                        </ul>
                    </div>
                    
                    <p>N·∫øu n√∫t kh√¥ng ho·∫°t ƒë·ªông, b·∫°n c√≥ th·ªÉ copy v√† paste link sau v√†o tr√¨nh duy·ªát:</p>
                    <p style='word-break: break-all; background: #f8f9fa; padding: 10px; border-radius: 5px; font-family: monospace;'>{$resetLink}</p>
                </div>
                <div class='footer'>
                    <p>¬© 2024 H·ªá th·ªëng Kho H√†ng. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    /**
     * T·∫°o template HTML cho email th√¥ng b√°o kh√≥a t√†i kho·∫£n
     */
    private static function taoTemplateThongBaoKhoa($hoTen, $lyDo) {
        $lyDoText = $lyDo ?: 'Vi ph·∫°m quy ƒë·ªãnh s·ª≠ d·ª•ng h·ªá th·ªëng';
        
        return "
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='UTF-8'>
            <style>
                body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }
                .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
                .header { background: linear-gradient(45deg, #dc3545, #c82333); color: white; padding: 30px; text-align: center; }
                .content { padding: 30px; }
                .alert { background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 5px; padding: 15px; margin: 20px 0; color: #721c24; }
                .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #6c757d; font-size: 12px; }
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üö´ Th√¥ng b√°o kh√≥a t√†i kho·∫£n</h1>
                    <p>H·ªá th·ªëng Kho H√†ng</p>
                </div>
                <div class='content'>
                    <h2>Xin ch√†o {$hoTen}!</h2>
                    <p>Ch√∫ng t√¥i th√¥ng b√°o r·∫±ng t√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã t·∫°m th·ªùi kh√≥a.</p>
                    
                    <div class='alert'>
                        <strong>L√Ω do kh√≥a:</strong> {$lyDoText}
                    </div>
                    
                    <p><strong>Th√¥ng tin chi ti·∫øt:</strong></p>
                    <ul>
                        <li>Th·ªùi gian kh√≥a: " . date('d/m/Y H:i:s') . "</li>
                        <li>Tr·∫°ng th√°i: T·∫°m th·ªùi kh√≥a</li>
                        <li>Li√™n h·ªá: Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£</li>
                    </ul>
                    
                    <p>ƒê·ªÉ m·ªü kh√≥a t√†i kho·∫£n, vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ qua:</p>
                    <ul>
                        <li>Email: support@warehouse.com</li>
                        <li>ƒêi·ªán tho·∫°i: (84) 123-456-789</li>
                    </ul>
                </div>
                <div class='footer'>
                    <p>¬© 2024 H·ªá th·ªëng Kho H√†ng. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
            </div>
        </body>
        </html>";
    }

    /**
     * T·∫°o link reset password
     */
    private static function taoLinkResetPassword($token) {
        $baseUrl = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? 'https://' : 'http://';
        $baseUrl .= $_SERVER['HTTP_HOST'];
        $baseUrl .= dirname($_SERVER['PHP_SELF']);
        
        return $baseUrl . "/reset_password.php?token=" . urlencode($token);
    }

    /**
     * Validate email format
     */
    public static function validateEmail($email) {
        return filter_var($email, FILTER_VALIDATE_EMAIL) !== false;
    }

    /**
     * T·∫°o OTP ng·∫´u nhi√™n
     */
    public static function taoOTP($length = 6) {
        return sprintf('%0' . $length . 'd', mt_rand(0, pow(10, $length) - 1));
    }

    /**
     * T·∫°o reset token
     */
    public static function taoResetToken() {
        return bin2hex(random_bytes(32));
    }

    /**
     * Log email activity
     */
    public static function logEmailActivity($email, $type, $status, $message = null) {
        try {
            // K·∫øt n·ªëi database
            global $conn;
            if (!$conn) {
                include_once 'connect.php';
            }

            $sql = "INSERT INTO email_logs (email, type, status, message, created_at) VALUES (?, ?, ?, ?, NOW())";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("ssss", $email, $type, $status, $message);
            $stmt->execute();
            
        } catch (Exception $e) {
            error_log("L·ªói log email: " . $e->getMessage());
        }
    }
}

/**
 * H√†m ti·ªán √≠ch ƒë·ªÉ test c·∫•u h√¨nh email
 */
function testEmailConfig() {
    $testEmail = "test@example.com";
    $testName = "Test User";
    $testOTP = EmailConfig::taoOTP();
    
    echo "ƒêang test c·∫•u h√¨nh email...\n";
    echo "OTP test: " . $testOTP . "\n";
    
    if (EmailConfig::guiEmailOTP($testEmail, $testName, $testOTP)) {
        echo "‚úÖ G·ª≠i email th√†nh c√¥ng!\n";
    } else {
        echo "‚ùå G·ª≠i email th·∫•t b·∫°i!\n";
    }
}

// Uncomment d√≤ng d∆∞·ªõi ƒë·ªÉ test c·∫•u h√¨nh email
// testEmailConfig();
?> 